# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-$
        restore-keys: |
          poetry-$

    - name: Config Github URL to download Private Repo
      env:
        GITHUB_TOKEN: $
      run: git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"

    - name: Install Dependencies using Poetry
      run: poetry install
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Run pytest
      run: PYTHONPATH=src/ poetry run python -m pytest -v --cov=src/ tests/

    - name: Run Coverage
      run: PYTHONPATH=src/ poetry run python -m coverage report -m;

    - name: Generate XML Report
      run: PYTHONPATH=src/ poetry run python -m coverage xml
